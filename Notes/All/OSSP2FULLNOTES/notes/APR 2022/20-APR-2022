How many ways are there in working with spring aop?
There are 3 ways are there in working with aop in spring framework.
1. programmatic aop approach
2. declarative-aspectj aop approach
3. annotation-driven aspectj aop approach

#1 joinpoint
spring framework supports: only the method as a joinpoint
aspect aop supports      : all the places within your class, where we write code like 	
														constructor, finalize, methods, static-blocks, instance blocks etc
spring aop + aspectj aop : only method 														

#2 pointcut
There are 2 types of pointcuts are there
1. static pointcut = The joinpoints on whom we wanted to advice the aspect is static list and fixed.
2. dynamic pointcut = The joinpoints on whom we wanted to advice the aspect is dynamic and knows during the runtime only while executing the joinpoint

spring aop: supports both static/dynamic pointcuts
aspectj aop: only static pointcut
spring aop + aspectj aop = only static pointcut

#3. weaving
There are 2 types of weaving are there
1. compile-time weaving = The proxy class will be generated during the stage of compilation of the application
2. runtime weaving = The proxy will be generated at runtime within the jvm memory during the execution of the program
spring aop = runtime weaving
aspectj aop = compile-time weaving
spring aop + aspectj aop = runtime weaving
------------------------------------------------------------------------------------------
#1. programmatic aop approach
What is logging and audting aspart of an application?
	
1. logging	= logging is used for tracing the flow of execution of our program and capture the errors generated by the program at runtime
Both these helps us in debugging and understanding the failures of the program
Thumb rules:-
	1. conditional or branching statement should be logged
	2. each method call and the return of control with possibility the output should be logged
	3. begin/end of a loop execution should be logged
	4. exceptions should be logged
	
2. auditing = auditing is about keeping track of the activities that are taken part aspart of our application. auditing is used for eliminating the fraud in the system
------------------------------------------------------------------------------------------
Around Advice

class Calculator {

	int add(int a, int b) {
		int sum = 0;
		sum = a + b;		
		return sum;
	}
	
}

class Logging {

}










































	























































